version: "3.2"

volumes:
  db_data:
  django:
  django_media:
  django_static:

services:
  nginx:
    restart: always
    image: nginx:1.19
    volumes:
      - django:/shared/
      - django_static:/backend_static/
      - django_media:/backend_media/
      - ./nginx:/etc/nginx/templates
    ports:
      - "${HTTP_PORT:?HTTP port is not set}:80"
    depends_on:
      - backend
      - frontend

  frontend:
    restart: always
    image: myrecipe/frontend:latest
    build:
      context: ./vue/
    environment:
      - DEBUG=${DEBUG:?Debug is not set}
    volumes:
      - ./vue/myrecipe/:/devcode/
      - /devcode/node_modules # otherwise we will override the image node_modules with our own
    command: sh -c '
      if [ "$DEBUG" -eq "1" ]; then cd /devcode/ && npm install && npm run dev; else http-server /code/dist; fi'

  backend:
    restart: always
    image: myrecipe/backend:latest
    build:
      context: ./django/
    environment:
      - DJANGO_DEBUG=${DEBUG:?Debug is not set}
      - DJANGO_SECRET=${DJANGO_SECRET:?Django secret is not set}
      - GOOGLE_AUTH_CLIENT_ID=${GOOGLE_AUTH_CLIENT_ID:?Google auth client ID is not set}
      - GOOGLE_AUTH_SECRET=${GOOGLE_AUTH_SECRET:?Google auth secret is not set}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - django:/shared/
      - django_static:/static/
      - django_media:/media/
      - ./django/:/code/:rw # to write migrations on host project
    depends_on:
      - db
    command: sh -c '
      python3 manage.py collectstatic --no-input &&
      python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      uwsgi --socket /shared/django.sock --chmod=666 --module myrecipe.wsgi --py-autoreload=$$DJANGO_DEBUG'

  db:
    restart: always
    image: postgres:11
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - db_data:/var/lib/postgresql/data
